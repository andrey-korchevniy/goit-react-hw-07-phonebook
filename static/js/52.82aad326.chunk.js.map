{"version":3,"file":"static/js/52.82aad326.chunk.js","mappings":"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","sources":["components/ContactsTable/ContactsTable.styled.js","components/ContactsTable/ContactRow/ContactRow.styled.js","components/ContactsTable/ContactRow/ContactRow.jsx","components/ContactsTable/ContactsTable.jsx","components/FilterBar/FilterBar.styled.js","components/FilterBar/FilterBar.jsx","images/Svg.jsx","pages/Trash/Trash.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    width: calc(100% / 4 * 3);\n    overflow: hidden;\n    border: none;\n    border-spacing: 1px;\n\n    text-align: left;\n`\nexport const HeadRow = styled.thead`\n    height: 49px;\n    padding: 4px 4px 4px 10px;\n    color: #5f6368;\n    font-size: 14px;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n`\nexport const HeadCell = styled.th`\n    width: calc(100% / 6);\n    font-weight: 400;\n`","import styled from \"styled-components\";\n\nexport const Row = styled.tr`\n    height: 56px;\n\n    :hover {\n        background-color: #F5F5F5;\n    }\n`\nexport const Cell = styled.td`\n    color: #202124;\n    font-size: 14px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    text-align: left;\n`\nexport const CellAmount = styled(Cell)`\n    text-align: left;\n`\nexport const DeleteBtn = styled.button`\n    height: 40px;\n    width: 40px;\n    margin-top: 7px;\n    border: 0;\n    background-color: transparent;\n    border-radius: 50%;\n\n    :focus, :hover {\n        background-color: rgba(60,64,67,.1);\n    }\n`\nexport const DeleteForeverBtn = styled.button`\n    display: inline-block;\n    width: 120px;\n    height: 36px;\n    border: 0;\n    background-color: transparent;\n    color: blue;\n    font-weight: 600;\n    border-radius: 5px;\n    outline: none !important;\n    margin-top: 7px;\n\n    :hover, :focus, :active {\n        background-color: lightgray;\n    }\n`\nexport const CellAction = styled(Cell)`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n","import {\n  Row,\n  Cell,\n  CellAmount,\n  DeleteBtn,\n  DeleteForeverBtn,\n  CellAction,\n} from './ContactRow.styled';\nimport PropTypes from 'prop-types';\nimport { SvgClear } from 'images/Svg';\nimport {\n  useDeleteContactMutation,\n  useToTrashContactMutation,\n} from 'redux/mockApiSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({ position: 'center-top' });\n\nexport const ContactRow = ({ id, name, number, isDeleted }) => {\n  // processing deleting forever\n  const [deleteContact] = useDeleteContactMutation(id);\n\n  const hundleDeleteContact = () => {\n    deleteContact(id);\n    Notify.success('Yor contact has been deleted forever');\n  };\n\n  // delete to trash\n  const [toTrashContact] = useToTrashContactMutation();\n\n  const hundleDeleteBtnClick = () => {\n    const message = isDeleted\n      ? 'Your contact has been restored'\n      : 'Your contact has been moved to Trash';\n    isDeleted = !isDeleted;\n    toTrashContact({ id, isDeleted });\n    Notify.success(message);\n  };\n\n  return (\n    <Row>\n      <Cell>{name}</Cell>\n      <CellAmount>{number}</CellAmount>\n      <CellAction>\n        <DeleteBtn onClick={hundleDeleteBtnClick}>\n          <SvgClear />\n        </DeleteBtn>\n        {isDeleted ? (\n          <DeleteForeverBtn onClick={hundleDeleteContact}>\n            Delete forever\n          </DeleteForeverBtn>\n        ) : (\n          <></>\n        )}\n      </CellAction>\n    </Row>\n  );\n};\n\nContactRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  isDeleted: PropTypes.bool.isRequired,\n};\n","import { Table, HeadRow, HeadCell } from './ContactsTable.styled';\nimport { ContactRow } from './ContactRow/ContactRow';\nimport { useGetMockApiQuery } from 'redux/mockApiSlice';\nimport PropTypes from 'prop-types';\n\nexport const ContactsTable = ({ trash, filter }) => {\n  const { data, isSuccess } = useGetMockApiQuery('', { refetshOnFocus: true });\n\n  // makes a list for render if request is success\n  if (isSuccess) {\n    const contactForRender = data.filter(\n      ({ name, phone, isDeleted }) =>\n        isDeleted === trash && (name.includes(filter) || phone.includes(filter))\n    );\n\n    return (\n      <Table>\n        <HeadRow>\n          <tr>\n            <HeadCell>Name</HeadCell>\n            <HeadCell>Phone number</HeadCell>\n            <HeadCell>Action</HeadCell>\n          </tr>\n        </HeadRow>\n        <tbody>\n          {contactForRender.map(contact => (\n            <ContactRow\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.phone}\n              isDeleted={contact.isDeleted}\n            />\n          ))}\n        </tbody>\n      </Table>\n    );\n  }\n};\n\nContactsTable.propTypes = {\n  trash: PropTypes.bool.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\n\nexport const InputBlock = styled.div`\n    max-width: 725px;\n    width: 100%;\n    height: 64px;\n    display: block;\n`\nexport const FilterForm = styled(Form)`\n    position: relative;\n    display: flex;\n    height: 48px;\n    margin-top: 8px;\n    display: block;\n`\nexport const FilterField = styled(Field)`\n    margin-left: 0px;\n    height: 42px;\n    width: calc(100% - 58px);\n    padding-left: 58px;\n    font-size: 16px;\n    background-color: #F1F3F4;\n    border: none;\n    outline:none;\n\n    :focus, :active {\n        outline:none;\n        background-color: #fff;\n        box-shadow: 0 1px 2px 0 rgb(60 64 67 / 30%), 0 1px 3px 1px rgb(60 64 67 / 15%);\n    }\n`\nexport const FilterBtn = styled.button`\n    position: absolute;\n    top: 3px;\n    left: 2px;\n    height: 40px;\n    width: 40px;\n    background-color: transparent;\n    border: 0;\n    border-radius: 50%;\n`\nexport const ClearFilterBtn = styled.button`\n    position: absolute;\n    top: 3px;\n    right: 3px;\n    height: 40px;\n    width: 40px;\n    border: 0;\n    background-color: transparent;\n    border: 0;\n    border-radius: 50%;\n\n    :focus, :hover {\n        background-color: rgba(60,64,67,.1);\n    }\n`","import {\n  FilterForm,\n  FilterField,\n  InputBlock,\n  FilterBtn,\n  ClearFilterBtn,\n} from './FilterBar.styled';\nimport { Formik } from 'formik';\nimport { SvgSearch, SvgClear } from 'images/Svg';\nimport PropTypes from 'prop-types';\n\nexport const FilterBar = ({ value, onSubmit, onClear }) => {\n  return (\n    <InputBlock>\n      <Formik initialValues={value}>\n        <FilterForm>\n          <FilterBtn>\n            <SvgSearch />\n          </FilterBtn>\n          <FilterField\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Search contacts\"\n            onChange={onSubmit}\n            required\n            value={value}\n            autoComplete=\"off\"\n          />\n          <ClearFilterBtn type=\"clear\" onClick={onClear}>\n            <SvgClear />\n          </ClearFilterBtn>\n        </FilterForm>\n      </Formik>\n    </InputBlock>\n  );\n};\n\nFilterBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  // onClear: PropTypes.func.isRequired,\n};\n","export const SvgContact = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n            <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n        </svg>\n    )\n}\n\nexport const SvgTrash = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path d=\"M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z\"></path>\n            <path d=\"M9 8h2v9H9zm4 0h2v9h-2z\"></path>\n        </svg>\n    )\n}\n\nexport const SvgSearch = () => {\n    return (\n        <svg focusable=\"false\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M20.49,19l-5.73-5.73C15.53,12.2,16,10.91,16,9.5C16,5.91,13.09,3,9.5,3S3,5.91,3,9.5C3,13.09,5.91,16,9.5,16 c1.41,0,2.7-0.47,3.77-1.24L19,20.49L20.49,19z M5,9.5C5,7.01,7.01,5,9.5,5S14,7.01,14,9.5S11.99,14,9.5,14S5,11.99,5,9.5z\"></path>\n            <path d=\"M0,0h24v24H0V0z\" fill=\"none\"></path>\n        </svg>\n    )\n}\n\nexport const SvgClear = () => {\n    return (\n        <svg focusable=\"false\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n        </svg>\n    )\n}\n\nexport const SvgName = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n            <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n        </svg>\n    )\n}\n\nexport const SvgTel = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path>\n            <path d=\"M6.54 5c.06.89.21 1.76.45 2.59l-1.2 1.2c-.41-1.2-.67-2.47-.76-3.79h1.51m9.86 12.02c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19M7.5 3H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1z\"></path>\n        </svg>\n    )\n}","import React from 'react';\nimport { ContactsTable } from 'components/ContactsTable/ContactsTable';\nimport { FilterBar } from 'components/FilterBar/FilterBar';\nimport { useState } from 'react';\n\nconst Trash = () => {\n  const [filter, setFilter] = useState('');\n\n  const hundleFilterCahge = value => {\n    setFilter(value.currentTarget.value);\n  };\n\n  const handleClearClick = () => {\n    setFilter('');\n  };\n\n  return (\n    <>\n      <FilterBar\n        value={filter}\n        onSubmit={hundleFilterCahge}\n        onClear={handleClearClick}\n      />\n      <ContactsTable trash={true} filter={filter} />\n    </>\n  );\n};\n\nexport default Trash;\n"],"names":["Table","styled","HeadRow","HeadCell","Row","Cell","CellAmount","DeleteBtn","DeleteForeverBtn","CellAction","Notify","position","ContactRow","id","name","number","isDeleted","useDeleteContactMutation","deleteContact","useToTrashContactMutation","toTrashContact","onClick","message","Svg","ContactsTable","trash","filter","useGetMockApiQuery","refetshOnFocus","data","isSuccess","contactForRender","phone","includes","map","contact","InputBlock","FilterForm","Form","FilterField","Field","FilterBtn","ClearFilterBtn","FilterBar","value","onSubmit","onClear","initialValues","type","placeholder","onChange","required","autoComplete","SvgContact","width","height","viewBox","d","fill","SvgTrash","SvgSearch","focusable","xmlns","SvgClear","SvgName","SvgTel","useState","setFilter","currentTarget"],"sourceRoot":""}