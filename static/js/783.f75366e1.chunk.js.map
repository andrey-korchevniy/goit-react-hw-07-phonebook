{"version":3,"file":"static/js/783.f75366e1.chunk.js","mappings":"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","sources":["images/Svg.jsx","components/NewContactForm/ContactInputLine/ContactInputLine.styled.js","components/NewContactForm/ContactInputLine/PhoneInputField/PhoneInputField.styled.js","components/NewContactForm/ContactInputLine/PhoneInputField/PhoneInputField.jsx","components/NewContactForm/ContactInputLine/ContactInputLine.jsx","pages/NewContact/NewContact.styled.js","components/NewContactForm/NewContactForm.jsx","pages/NewContact/NewContact.jsx"],"sourcesContent":["export const SvgContact = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n            <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n        </svg>\n    )\n}\n\nexport const SvgTrash = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path d=\"M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z\"></path>\n            <path d=\"M9 8h2v9H9zm4 0h2v9h-2z\"></path>\n        </svg>\n    )\n}\n\nexport const SvgSearch = () => {\n    return (\n        <svg focusable=\"false\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M20.49,19l-5.73-5.73C15.53,12.2,16,10.91,16,9.5C16,5.91,13.09,3,9.5,3S3,5.91,3,9.5C3,13.09,5.91,16,9.5,16 c1.41,0,2.7-0.47,3.77-1.24L19,20.49L20.49,19z M5,9.5C5,7.01,7.01,5,9.5,5S14,7.01,14,9.5S11.99,14,9.5,14S5,11.99,5,9.5z\"></path>\n            <path d=\"M0,0h24v24H0V0z\" fill=\"none\"></path>\n        </svg>\n    )\n}\n\nexport const SvgClear = () => {\n    return (\n        <svg focusable=\"false\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n        </svg>\n    )\n}\n\nexport const SvgName = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n            <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 9c2.7 0 5.8 1.29 6 2v1H6v-.99c.2-.72 3.3-2.01 6-2.01m0-11C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path>\n        </svg>\n    )\n}\n\nexport const SvgTel = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n            <path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path>\n            <path d=\"M6.54 5c.06.89.21 1.76.45 2.59l-1.2 1.2c-.41-1.2-.67-2.47-.76-3.79h1.51m9.86 12.02c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19M7.5 3H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1z\"></path>\n        </svg>\n    )\n}","import styled from \"styled-components\";\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n    display: flex;\n    position: relative;\n    align-items: center;\n    height: 40px;\n    width: 550px;\n    padding-bottom: 10px;\n    margin: 0 40px;\n    color: #5f6368;\n    fill: #5f6368;\n\n    :focus, :active, :hover {\n        fill: blue;\n    }\n`\nexport const InputField = styled(Field)`\n    display: block;\n    height: 24px;\n    width: 100%;\n    margin: 0 30px;\n    font-size: 14px;\n    font-weight: 400;\n    border: none;\n    border-bottom: 1px solid lightgrey;\n    outline:none;\n\n    :active, :focus {\n        border-bottom: 2px solid blue;\n        fill: blue;\n        color: blue;\n    }\n`\nexport const ErrorInput = styled(ErrorMessage)`\n    position: absolute;\n    bottom: 10px;\n    right: -300px;\n    width: 300px;\n    font-size: 14px;\n    font-weight: 400;\n`\n","import PhoneInput from 'react-phone-input-2';\nimport styled from 'styled-components';\n\nexport const PhoneInputLine = styled(PhoneInput)`\n    margin-left: 30px;\n`","import { PhoneInputLine } from './PhoneInputField.styled';\n\nexport const PhoneInputField = ({ field, form }) => {\n  return (\n    <PhoneInputLine\n      country={'ua'}\n      value={field.value}\n      onChange={phone => (form.values.phone = phone)}\n    />\n  );\n};\n","import { SvgName, SvgTel } from 'images/Svg';\nimport { Label, InputField, ErrorInput } from './ContactInputLine.styled';\nimport PropTypes from 'prop-types';\nimport { PhoneInputField } from './PhoneInputField/PhoneInputField';\nimport React from 'react';\n\n// line 'Name' or 'Phone' - depends of props\nexport const ContactInputLine = ({ type, name, title, placeholder }) => {\n  const component = name === 'phone' ? PhoneInputField : null;\n\n  return (\n    <Label>\n      {name === 'name' ? <SvgName /> : <SvgTel />}\n      <InputField\n        type={type}\n        name={name}\n        title={title}\n        placeholder={placeholder}\n        component={component}\n        required\n      />\n      <ErrorInput name={name} component=\"div\" />\n    </Label>\n  );\n};\n\nContactInputLine.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    display: inline-block;\n    box-sizing: border-box;\n    height: 36px;\n    width: 121px;\n    padding: 0 24px;\n    margin-left: calc(100% - 200px);\n    outline: none;\n    border: none;\n    border-radius: 4px;\n    line-height: 16px;\n    font-size: 14px;\n    font-weight: 600;\n    text-decoration: none;\n    background-color: rgba(26,115,232);\n    color: #ffffff;\n    cursor: pointer;\n    user-select: none;\n    appearance: none;\n    touch-action: manipulation;\n    vertical-align: top;\n    transition: box-shadow 0.2s;\n\n    :focus-visible {\n        border: 1px solid #4c51f9;\n        outline: none;\n    }\n    \n    :hover {\n        transition: all 0.2s;\n        box-shadow: 0 7px 14px rgb(65 132 144 / 10%), 0 3px 6px rgb(0 0 0 / 8%);\n    }\n    \n    :active {\n        background-color: #808080;\n    }\n\n    :disabled {\n        background-color: #eee;\n        border-color: #eee;\n        color: #444;\n        cursor: not-allowed;\n    }\n`\n\n","import { Formik, Form } from 'formik';\nimport { ContactInputLine } from './ContactInputLine/ContactInputLine';\nimport { Button } from 'pages/NewContact/NewContact.styled';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().min(3).required(),\n});\n\nexport const NewContactForm = ({ hundleSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      onSubmit={hundleSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form>\n        <Button type=\"submit\">Save</Button>\n        <hr></hr>\n        <ContactInputLine\n          type=\"text\"\n          name=\"name\"\n          title=\"Name cam contain only letters, numbers and defis\"\n          placeholder=\"Name\"\n        />\n        <ContactInputLine\n          type=\"tel\"\n          name=\"phone\"\n          title=\"Phone number must contain only numbers, spases, defis and +\"\n          placeholder=\"Phone number\"\n        />\n      </Form>\n    </Formik>\n  );\n};\n\nNewContactForm.propTypes = {\n  hundleSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { SvgClear } from 'images/Svg';\nimport { Link } from 'react-router-dom';\nimport { NewContactForm } from 'components/NewContactForm/NewContactForm';\nimport {\n  useCreateContactMutation,\n  useGetMockApiQuery,\n} from 'redux/mockApiSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({ position: 'center-top' });\n\nconst NewContact = () => {\n  const { data } = useGetMockApiQuery({ refetshOnFocus: true });\n  const [createContact] = useCreateContactMutation();\n\n  const hundleSubmit = e => {\n    const { name, phone } = e;\n\n    // check if there are any such contacts\n    if (data.map(el => (el = el.name)).includes(name)) {\n      Notify.failure(`A contact with name ${name} already is in your book`);\n    } else if (data.map(el => (el = el.phone)).includes(phone)) {\n      Notify.failure(`A contact with phone ${phone} already is in your book`);\n    } else {\n      createContact({\n        name: name,\n        phone: phone,\n        isDeleted: false,\n      });\n      Notify.success(`The contact ${name} has been created`);\n      document.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <Link to={'/'}>\n        {' '}\n        <SvgClear />\n      </Link>\n      <NewContactForm hundleSubmit={hundleSubmit} />\n    </>\n  );\n};\n\nexport default NewContact;\n"],"names":["SvgContact","width","height","viewBox","d","fill","SvgTrash","SvgSearch","focusable","xmlns","SvgClear","SvgName","SvgTel","Label","styled","InputField","Field","ErrorInput","ErrorMessage","PhoneInputLine","PhoneInput","PhoneInputField","field","form","country","value","onChange","phone","values","ContactInputLine","type","name","title","placeholder","component","Svg","required","Button","validationSchema","yup","shape","min","NewContactForm","hundleSubmit","initialValues","onSubmit","Notify","position","data","useGetMockApiQuery","refetshOnFocus","useCreateContactMutation","createContact","to","e","map","el","includes","isDeleted","document","location","reload"],"sourceRoot":""}